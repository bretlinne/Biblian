<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
.slidecontainer {
  width: 50%; /* Width of the outside container */
}

input[type=range] {
    display: block;
    width: 50%; /* Full-width */
}
    
/* The slider itself */
.slider {
  -webkit-appearance: none;  /* Override default CSS styles */
  height: 25px; /* Specified height */
  background: #d3d3d3; /* Grey background */
  outline: none; /* Remove outline */
  opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
  -webkit-transition: .2s; /* 0.2 seconds transition on hover */
  transition: opacity .2s;
}

/* Mouse-over effects */
.slider:hover {
  opacity: 1; /* Fully shown on mouse-over */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  -webkit-appearance: none; /* Override default look */
  appearance: none;
  width: 25px; /* Set a specific slider handle width */
  height: 25px; /* Slider handle height */
  background: #4CAF50; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

.slider::-moz-range-thumb {
  width: 25px; /* Set a specific slider handle width */
  height: 25px; /* Slider handle height */
  background: #4CAF50; /* Green background */
  cursor: pointer; /* Cursor on hover */
}
</style>

<?php 
/*-----------------------------------------------------------------------------
// Project:     BIBLIAN 
// File:        readTemplate.php
// Dir:         /reatTemplate.php
// Desc:        Contains template for reading and searching results of the 
//              Biblian DB.
// TODO:        DELETE DOESN"T WORK
//              READ ONE DOESN"T WORK           DONE
//-----------------------------------------------------------------------------
*/
//-------------------------------------
// POST for server-side functions
// --JS needs to add data to POST in 
//   order for the server to 'see' it.
//-------------------------------------
if($_POST){
    $bookIds            = $_POST['bookIds'];

    // if on success of delete, reload all books from DB to refresh the UI
    if($book->deleteSelectedBooks($bookIds)){
        $stmt = $book->readAll($fromRecordNum, $recordsPerPage);
        echo "<div class='alert alert-success'>Delete from Database Successful</div>";
        header('Location:./res/inc/clearReload.php');
    }
}

// this is the last section of the page-header DIV started on the layoutHeader.php
    // this form when clicked, calls search.php

    // --------------------------------
    // SEARCH BAR - NOT WORKING
    // TODO: V0.7.5 - get search working
    // --------------------------------
    debug_to_console('V0.7.5: Get Search Bar Implmented.  Its commented outon readTemplate.php');
    // echo "<form role='search' action='search.php'>";
    //         echo "<div class='input-group col-md-3 pull-left margin-right-1em'>";
    //         $searchValue=isset($searchTerm) ? "value='{$searchTerm}'" : "";
    //         echo "<input type='text' class='form-control' placeholder='Enter Book Title...' name='s' id='searchTerm' required {$searchValue} />";
    //         echo "<div class='input-group-btn'>";
    //             echo "<button class='btn btn-primary' id='search-btn' type='submit'><i class='glyphicon glyphicon-search'></i></button>";
    //         echo "</div>";
    //     echo "</div>";
    // echo "</form>";

    // --------------------------------
    // CREATE NAV BUTTON
    // --------------------------------
    echo "<div class='right-button-margin'>";
        echo "<a href='createBook.php' class='btn btn-primary pull-right'>";
            echo "<span class='glyphicon glyphicon-plus'></span> Add New Book";
        echo "</a>";
    echo "</div>";

    // --------------------------------
    // DELETE BUTTON
    // --------------------------------
    echo "<form method='POST' id='deleteForm' name='deleteForm' action=''>";
        echo "<button id='deleteSelectedBtn' onclick='JavaScript:return deleteSelected();'>";
            echo "<span class='glyphicon glyphicon-trash'></span>";
        echo "</button>";
    echo "</form>";

echo "</div>"; // END page-header


// ----------------------------------------------------------------------------
// SVG star icon
/*
$star = "<svg class='bi bi-star-fill' width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>
                <path d='M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z'/>
             </svg>";
*/
$starSize = '1.5em';
$statusSize = '10em';
$star ="
<svg width='{$starSize}' height='{$starSize}' viewBox='0 0 116 110' fill='none' xmlns='http://www.w3.org/2000/svg'>
<path d='M53.8337 2.27944C55.8114 -0.701453 60.1886 -0.70145 62.1663 2.27944L79.1647 27.8991C79.8291 28.9004 80.8319 29.629 81.9895 29.9514L111.608 38.2009C115.054 39.1608 116.407 43.3237 114.183 46.1258L95.0701 70.2091C94.323 71.1504 93.94 72.3293 93.9911 73.5299L95.2979 104.248C95.45 107.822 91.9088 110.395 88.5567 109.146L59.7458 98.4105C58.6198 97.9909 57.3802 97.9909 56.2542 98.4105L27.4433 109.146C24.0912 110.395 20.55 107.822 20.7021 104.248L22.0089 73.5299C22.06 72.3293 21.677 71.1504 20.9299 70.2091L1.81701 46.1258C-0.406814 43.3237 0.94579 39.1608 4.39196 38.2009L34.0105 29.9514C35.1681 29.629 36.1709 28.9004 36.8353 27.8991L53.8337 2.27944Z' fill='url(#paint0_linear)'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M58 14.0875L45.168 33.4277C43.1748 36.4317 40.1665 38.6174 36.6936 39.5847L14.3347 45.8123L28.763 63.9927C31.004 66.8166 32.1531 70.3531 31.9999 73.9549L31.0133 97.144L52.7626 89.0399C56.1407 87.7811 59.8593 87.7811 63.2374 89.0399L84.9867 97.144L84.0001 73.9549C83.8469 70.3531 84.996 66.8166 87.237 63.9927L101.665 45.8123L79.3064 39.5847C75.8335 38.6174 72.8252 36.4317 70.832 33.4277L58 14.0875ZM62.1663 2.27944C60.1886 -0.70145 55.8114 -0.701453 53.8337 2.27944L36.8353 27.8991C36.1709 28.9004 35.1681 29.629 34.0105 29.9514L4.39196 38.2009C0.94579 39.1608 -0.406814 43.3237 1.81701 46.1258L20.9299 70.2091C21.677 71.1504 22.06 72.3293 22.0089 73.5299L20.7021 104.248C20.55 107.822 24.0912 110.395 27.4433 109.146L56.2542 98.4105C57.3802 97.9909 58.6197 97.9909 59.7458 98.4105L88.5567 109.146C91.9088 110.395 95.45 107.822 95.2979 104.248L93.9911 73.5299C93.94 72.3293 94.323 71.1504 95.0701 70.2091L114.183 46.1258C116.407 43.3237 115.054 39.1608 111.608 38.2009L81.9895 29.9514C80.8319 29.629 79.8291 28.9004 79.1647 27.8991L62.1663 2.27944Z' fill='#866B21'/>
<defs>
<linearGradient id='paint0_linear' x1='58' y1='-4' x2='58' y2='124' gradientUnits='userSpaceOnUse'>
<stop stop-color='#FCE079'/>
<stop offset='0.270829' stop-color='#F9DD78'/>
<stop offset='1' stop-color='#EDAB02'/>
</linearGradient>
</defs>
</svg>";

 
/*'<svg width="180" height="171" viewBox="0 0 180 171" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M85.8336 2.27944C87.8114 -0.701444 92.1886 -0.701451 94.1663 2.27944L122.956 45.6702C123.62 46.6715 124.623 47.4001 125.781 47.7225L175.944 61.6944C179.39 62.6542 180.743 66.8171 178.519 69.6192L146.148 110.408C145.401 111.349 145.018 112.528 145.069 113.729L147.283 165.755C147.435 169.329 143.894 171.901 140.541 170.652L91.7458 152.471C90.6198 152.051 89.3802 152.051 88.2542 152.471L39.4587 170.652C36.1065 171.901 32.5653 169.329 32.7174 165.755L34.9307 113.729C34.9818 112.528 34.5988 111.349 33.8518 110.408L1.4811 69.6192C-0.742727 66.8171 0.609871 62.6542 4.05604 61.6944L54.2195 47.7225C55.3771 47.4001 56.3799 46.6715 57.0443 45.6702L85.8336 2.27944Z" fill="black"/>
</svg>';
  */           
// linne half-star icon
$hStar ="
<svg width='{$starSize}' height='{$starSize}' viewBox='0 0 116 110' fill='none' xmlns='http://www.w3.org/2000/svg'>
<path fill-rule='evenodd' clip-rule='evenodd' d='M54.2696 90.7265V19.5918C54.2696 18.7325 54.0748 17.9626 53.7385 17.2992L43.771 32.322C42.0437 34.9255 39.4364 36.8197 36.4266 37.658L11.1638 44.6944L27.466 65.236C29.4082 67.6833 30.4041 70.7483 30.2713 73.8699L29.1566 100.071L53.7305 90.914C53.9091 90.8474 54.0889 90.7849 54.2696 90.7265Z' fill='url(#paint0_linear)'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M58 14.0875L45.168 33.4277C43.1748 36.4317 40.1665 38.6174 36.6936 39.5847L14.3347 45.8123L28.763 63.9927C31.004 66.8166 32.1531 70.3531 31.9999 73.9549L31.0133 97.144L52.7626 89.0399C56.1407 87.7811 59.8593 87.7811 63.2374 89.0399L84.9867 97.144L84.0001 73.9549C83.8469 70.3531 84.996 66.8166 87.237 63.9927L101.665 45.8123L79.3064 39.5847C75.8335 38.6174 72.8252 36.4317 70.832 33.4277L58 14.0875ZM62.1663 2.27944C60.1886 -0.70145 55.8114 -0.701453 53.8337 2.27944L36.8353 27.8991C36.1709 28.9004 35.1681 29.629 34.0105 29.9514L4.39196 38.2009C0.94579 39.1608 -0.406814 43.3237 1.81701 46.1258L20.9299 70.2091C21.677 71.1504 22.06 72.3293 22.0089 73.5299L20.7021 104.248C20.55 107.822 24.0912 110.395 27.4433 109.146L56.2542 98.4105C57.3802 97.9909 58.6197 97.9909 59.7458 98.4105L88.5567 109.146C91.9088 110.395 95.45 107.822 95.2979 104.248L93.9911 73.5299C93.94 72.3293 94.323 71.1504 95.0701 70.2091L114.183 46.1258C116.407 43.3237 115.054 39.1608 111.608 38.2009L81.9895 29.9514C80.8319 29.629 79.8291 28.9004 79.1647 27.8991L62.1663 2.27944Z' fill='#866B21'/>
<defs>
<linearGradient id='paint0_linear' x1='58.2696' y1='-4' x2='58.2696' y2='124' gradientUnits='userSpaceOnUse'>
<stop stop-color='#FFE17A'/>
<stop offset='0.291662' stop-color='#FFE27A'/>
<stop offset='1' stop-color='#EDAB03'/>
</linearGradient>
</defs>
</svg>";

/*"<svg class='bi bi-star-fill' width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>
                <path fill-rule='evenodd' d='M5.354 5.119L7.538.792A.516.516 0 018 .5c.183 0 .366.097.465.292l2.184 4.327 4.898.696A.537.537 0 0116 6.32a.55.55 0 01-.17.445l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256a.519.519 0 01-.146.05c-.341.06-.668-.254-.6-.642l.83-4.73L.173 6.765a.55.55 0 01-.171-.403.59.59 0 01.084-.302.513.513 0 01.37-.245l4.898-.696zM8 12.027c.08 0 .16.018.232.056l3.686 1.894-.694-3.957a.564.564 0 01.163-.505l2.906-2.77-4.052-.576a.525.525 0 01-.393-.288L8.002 2.223 8 2.226v9.8z' clip-rule='evenodd'/>
             </svg>";*/

// --------------------
// linne empty star
// --------------------
$eStar = 
"<svg width='{$starSize}' height='{$starSize}' viewBox='0 0 116 110' fill='none' xmlns='http://www.w3.org/2000/svg'>
<path fill-rule='evenodd' clip-rule='evenodd' d='M58 14.0875L45.168 33.4277C43.1748 36.4317 40.1665 38.6174 36.6936 39.5847L14.3347 45.8123L28.763 63.9927C31.004 66.8166 32.1531 70.3531 31.9999 73.9549L31.0133 97.144L52.7626 89.0399C56.1407 87.7811 59.8593 87.7811 63.2374 89.0399L84.9867 97.144L84.0001 73.9549C83.8469 70.3531 84.996 66.8166 87.237 63.9927L101.665 45.8123L79.3064 39.5847C75.8335 38.6174 72.8252 36.4317 70.832 33.4277L58 14.0875ZM62.1663 2.27944C60.1886 -0.70145 55.8114 -0.701453 53.8337 2.27944L36.8353 27.8991C36.1709 28.9004 35.1681 29.629 34.0105 29.9514L4.39196 38.2009C0.94579 39.1608 -0.406814 43.3237 1.81701 46.1258L20.9299 70.2091C21.677 71.1504 22.06 72.3293 22.0089 73.5299L20.7021 104.248C20.55 107.822 24.0912 110.395 27.4433 109.146L56.2542 98.4105C57.3802 97.9909 58.6197 97.9909 59.7458 98.4105L88.5567 109.146C91.9088 110.395 95.45 107.822 95.2979 104.248L93.9911 73.5299C93.94 72.3293 94.323 71.1504 95.0701 70.2091L114.183 46.1258C116.407 43.3237 115.054 39.1608 111.608 38.2009L81.9895 29.9514C80.8319 29.629 79.8291 28.9004 79.1647 27.8991L62.1663 2.27944Z' fill='#866B21'/>
</svg>";

/*'<svg width="2em" height="2em" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M16 3.04912L11.9494 9.43965C11.4668 10.201 10.7384 10.755 9.89749 11.0002L2.83957 13.0579L7.39407 19.0652C7.9367 19.7809 8.21492 20.6773 8.17782 21.5902L7.8664 29.2525L14.7319 26.5747C15.5498 26.2556 16.4502 26.2556 17.2681 26.5747L24.1336 29.2525L23.8222 21.5902C23.7851 20.6773 24.0633 19.7809 24.6059 19.0652L29.1604 13.0579L22.1025 11.0002C21.2616 10.755 20.5332 10.201 20.0506 9.43965L16 3.04912ZM17.164 0.653813C16.6114 -0.217937 15.3886 -0.217938 14.836 0.653812L10.087 8.14618C9.90137 8.43902 9.62122 8.65208 9.2978 8.74638L1.02297 11.1589C0.0601751 11.4396 -0.317716 12.657 0.303576 13.4765L5.64336 20.5196C5.85206 20.7949 5.95907 21.1396 5.9448 21.4907L5.57969 30.4741C5.53721 31.5194 6.52654 32.2718 7.46307 31.9065L15.5123 28.767C15.8269 28.6443 16.1731 28.6443 16.4877 28.767L24.5369 31.9065C25.4735 32.2718 26.4628 31.5194 26.4203 30.4741L26.0552 21.4907C26.0409 21.1396 26.1479 20.7949 26.3566 20.5196L31.6964 13.4765C32.3177 12.657 31.9398 11.4396 30.977 11.1589L22.7022 8.74638C22.3788 8.65208 22.0986 8.43902 21.913 8.14618L17.164 0.653813Z" fill="#866B21"/>
</svg>';*/

/*"<svg class='bi bi-star' width='1em' height='1em' viewBox='0 0 16 16' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>
<path fill-rule='evenodd' d='M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 00-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 00-.163-.505L1.71 6.745l4.052-.576a.525.525 0 00.393-.288l1.847-3.658 1.846 3.658a.525.525 0 00.393.288l4.052.575-2.906 2.77a.564.564 0 00-.163.506l.694 3.957-3.686-1.894a.503.503 0 00-.461 0z' clip-rule='evenodd'/>
</svg>";*/

$statFinColors = (object) [
    'nFill' => '#3BE6BD',           // normal background fill
    'nCheck' => '#21B56D',          // normal checkmark fill
    'nBorder' => '#31825B'          // normal border color
];

$statFinColorsHover = (object) [
    'nFill' => '#000',           // normal background fill
    'nCheck' => '#666',          // normal checkmark fill
    'nBorder' => '#fff'          // normal border color
];

$statAssigned = (object) [
    'nFill' => $statFinColors->nFill,           // normal background fill
    'nCheck' => $statFinColors->nCheck,         // normal checkmark fill
    'nBorder' => $statFinColors->nBorder        // normal border color
];
function swapStatusState(&$assigned, &$newTarget){
    debug_to_console($newTarget->nFill);
    $assigned->nFill = $newTarget->nFill;
    $assigned->nBorder = $newTarget->nBorder;
    $assigned->nCheck = $newTarget->nCheck;
    
}

// --------------------
// STATUS FINISHED SVG
// --------------------
$statFin = 
"<svg width='{$statusSize}' height='{$statusSize}' viewBox='0 0 244 218' fill='none' xmlns='http://www.w3.org/2000/svg'>
<path d='M11.9999 17.9999C11.9999 8.05873 20.0588 -0.000152588 29.9999 -0.000152588H212C221.941 -0.000152588 230 8.05872 230 17.9998V200C230 209.941 221.941 218 212 218H29.9999C20.0588 218 11.9999 209.941 11.9999 200V17.9999Z' fill='{$statAssigned->nFill}'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M29.9999 7.99985H212C217.31 7.99985 221.654 12.1389 221.98 17.3668L230 24.564V17.9998C230 8.05872 221.941 -0.000152588 212 -0.000152588H29.9999C20.0588 -0.000152588 11.9999 8.05873 11.9999 17.9999V99.7658L19.9999 90.6092V17.9999C19.9999 12.477 24.477 7.99985 29.9999 7.99985ZM19.9999 143.135C17.3809 141.217 14.721 139.356 11.9999 137.551V200C11.9999 209.941 20.0588 218 29.9999 218H212C221.941 218 230 209.941 230 200V64.1446C227.278 66.047 224.612 67.9242 222 69.7805V200C222 205.523 217.523 210 212 210H29.9999C24.477 210 19.9999 205.523 19.9999 200V143.135Z' fill='{$statAssigned->nBorder}'/>
<path d='M0.499878 122.5L41.9999 75.0001L90.4999 135.039L210 13.5001L244 46.0001C172.189 94.5217 138.117 126.565 90.4999 194C54.3231 162.461 34.6057 139.011 0.499878 122.5Z' fill='{$statAssigned->nCheck}'/>
<path d='M44.4007 122H37.2007V94H59.4007V99.6H44.4007V106.2H56.2007V111.8H44.4007V122Z' fill='#1E4F37'/>
<path d='M70.6007 101.6V122H63.6007V107H60.6007V101.6H70.6007ZM63.6007 93.6H70.6007V99.2H63.6007V93.6Z' fill='#1E4F37'/>
<path d='M86.4132 106.2C84.9999 106.2 83.3998 106.467 81.6132 107V122H74.6132V100.8H80.8132L81.2132 102.8C82.4665 101.973 83.7465 101.373 85.0532 101C86.3865 100.6 87.5065 100.4 88.4132 100.4H90.2132C92.0265 100.4 93.4798 100.947 94.5732 102.04C95.6665 103.133 96.2132 104.587 96.2132 106.4V122H89.2132V107.6C89.2132 107.2 89.0799 106.867 88.8132 106.6C88.5465 106.333 88.2132 106.2 87.8132 106.2H86.4132Z' fill='#1E4F37'/>
<path d='M108.608 101.6V122H101.608V107H98.6085V101.6H108.608ZM101.608 93.6H108.608V99.2H101.608V93.6Z' fill='#1E4F37'/>
<path d='M111.821 116.4C117.234 116.8 121.501 117 124.621 117C125.021 117 125.354 116.867 125.621 116.6C125.888 116.333 126.021 116 126.021 115.6V114.2H117.421C115.608 114.2 114.154 113.653 113.061 112.56C111.968 111.467 111.421 110.013 111.421 108.2V106.8C111.421 104.987 111.968 103.533 113.061 102.44C114.154 101.347 115.608 100.8 117.421 100.8H131.021V106H119.821C119.421 106 119.088 106.133 118.821 106.4C118.554 106.667 118.421 107 118.421 107.4C118.421 107.8 118.554 108.133 118.821 108.4C119.088 108.667 119.421 108.8 119.821 108.8H127.021C128.834 108.8 130.288 109.347 131.381 110.44C132.474 111.533 133.021 112.987 133.021 114.8V116.4C133.021 118.213 132.474 119.667 131.381 120.76C130.288 121.853 128.834 122.4 127.021 122.4C122.301 122.4 117.234 122.133 111.821 121.6V116.4Z' fill='#1E4F37'/>
<path d='M142.824 101.2C145.411 100.667 147.677 100.4 149.624 100.4H151.424C153.237 100.4 154.691 100.947 155.784 102.04C156.877 103.133 157.424 104.587 157.424 106.4V122H150.424V107.2C150.424 106.8 150.291 106.467 150.024 106.2C149.757 105.933 149.424 105.8 149.024 105.8H147.624C146.611 105.8 145.677 105.853 144.824 105.96C143.997 106.067 143.331 106.147 142.824 106.2V122H135.824V94H142.824V101.2Z' fill='#1E4F37'/>
<path d='M169.219 105.4C168.153 105.4 167.619 105.933 167.619 107V109.2H174.419V107C174.419 105.933 173.886 105.4 172.819 105.4H169.219ZM180.619 121.6C175.473 122.133 170.806 122.4 166.619 122.4C164.806 122.4 163.353 121.853 162.259 120.76C161.166 119.667 160.619 118.213 160.619 116.4V106.8C160.619 104.8 161.179 103.24 162.299 102.12C163.446 100.973 165.019 100.4 167.019 100.4H175.019C177.019 100.4 178.579 100.973 179.699 102.12C180.846 103.24 181.419 104.8 181.419 106.8V114.2H167.619V115.8C167.619 116.2 167.753 116.533 168.019 116.8C168.286 117.067 168.619 117.2 169.019 117.2C171.659 117.2 175.526 117 180.619 116.6V121.6Z' fill='#1E4F37'/>
<path d='M200.004 122L199.604 120C198.35 120.827 197.057 121.44 195.724 121.84C194.417 122.213 193.31 122.4 192.404 122.4H190.604C188.79 122.4 187.337 121.853 186.244 120.76C185.15 119.667 184.604 118.213 184.604 116.4V107.2C184.604 105.2 185.164 103.64 186.284 102.52C187.43 101.373 189.004 100.8 191.004 100.8H199.204V94H206.204V122H200.004ZM194.404 116.6C195.817 116.6 197.417 116.333 199.204 115.8V106.2H193.204C192.137 106.2 191.604 106.733 191.604 107.8V115.2C191.604 115.6 191.737 115.933 192.004 116.2C192.27 116.467 192.604 116.6 193.004 116.6H194.404Z' fill='#1E4F37'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M47.4007 125H34.2007V91H60.6007V90.6H73.6007V97.8H83.2726L83.3889 98.3817C83.6604 98.2871 83.934 98.2002 84.2096 98.121C85.6834 97.6801 87.108 97.4 88.4132 97.4H90.2132C92.1923 97.4 94.0466 97.8955 95.6085 99.0013V98.6H98.6085V90.6H111.608V99.7169C113.253 98.3893 115.263 97.8 117.421 97.8H132.824V91H145.824V97.6558C147.166 97.4874 148.434 97.4 149.624 97.4H151.424C153.885 97.4 156.153 98.166 157.905 99.9187C158.358 100.371 158.745 100.858 159.069 101.374C159.382 100.887 159.75 100.427 160.178 99.9987C162.013 98.164 164.421 97.4 167.019 97.4H175.019C177.603 97.4 180.006 98.1563 181.821 99.9987C182.34 100.51 182.772 101.067 183.126 101.663C183.423 101.217 183.767 100.794 184.162 100.399C185.997 98.564 188.405 97.8 191.004 97.8H196.204V91H209.204V125H197.544L197.431 124.435C197.152 124.535 196.87 124.628 196.586 124.714L196.567 124.719L196.548 124.725C195.093 125.14 193.691 125.4 192.404 125.4H190.604C188.143 125.4 185.875 124.634 184.122 122.881C183.945 122.704 183.777 122.521 183.619 122.333V124.305L180.929 124.584C175.702 125.126 170.93 125.4 166.619 125.4C164.29 125.4 162.134 124.714 160.424 123.155V125H147.424V108.801C146.849 108.805 146.316 108.829 145.824 108.871V125H132.824V123.491C131.182 124.813 129.175 125.4 127.021 125.4C122.213 125.4 117.075 125.13 111.608 124.594V125H86.2132V109.202C85.7321 109.214 85.1997 109.266 84.6132 109.365V125H60.6007L60.6007 110H59.2007V114.8H47.4007V125ZM57.6007 103.2V102.6H47.4007V103.2H57.6007ZM44.4007 106.2V99.6H59.4007V94H37.2007V122H44.4007V111.8H56.2007V106.2H44.4007ZM60.6007 101.6V107H63.6007V122H70.6007V101.6H60.6007ZM63.6007 99.2H70.6007V93.6H63.6007V99.2ZM81.6132 107C83.3998 106.467 84.9999 106.2 86.4132 106.2H87.8132C88.2132 106.2 88.5465 106.333 88.8132 106.6C89.0798 106.867 89.2132 107.2 89.2132 107.6V122H96.2132V106.4C96.2132 105.299 96.0116 104.331 95.6085 103.495C95.3477 102.954 95.0026 102.469 94.5732 102.04C93.4799 100.947 92.0265 100.4 90.2132 100.4H88.4132C87.5065 100.4 86.3865 100.6 85.0532 101C84.6949 101.102 84.3386 101.222 83.9842 101.358C83.0465 101.719 82.1228 102.2 81.2132 102.8L80.8132 100.8H74.6132V122H81.6132V107ZM101.608 107V122H108.608V101.6H98.6085V107H101.608ZM111.821 121.6C117.234 122.133 122.301 122.4 127.021 122.4C128.834 122.4 130.288 121.853 131.381 120.76C132.096 120.046 132.577 119.177 132.824 118.155C132.955 117.613 133.021 117.028 133.021 116.4V114.8C133.021 114.172 132.955 113.587 132.824 113.045C132.577 112.023 132.096 111.155 131.381 110.44C130.669 109.729 129.805 109.249 128.789 109C128.244 108.867 127.654 108.8 127.021 108.8H119.821C119.421 108.8 119.088 108.667 118.821 108.4C118.554 108.133 118.421 107.8 118.421 107.4C118.421 107 118.554 106.667 118.821 106.4C119.088 106.133 119.421 106 119.821 106H131.021V100.8H117.421C115.608 100.8 114.154 101.347 113.061 102.44C112.337 103.164 111.853 104.045 111.608 105.084C111.483 105.615 111.421 106.187 111.421 106.8V108.2C111.421 108.813 111.483 109.385 111.608 109.916C111.853 110.955 112.337 111.836 113.061 112.56C113.482 112.981 113.957 113.321 114.485 113.58C115.328 113.993 116.306 114.2 117.421 114.2H126.021V115.6C126.021 116 125.888 116.333 125.621 116.6C125.354 116.867 125.021 117 124.621 117C122.67 117 120.27 116.922 117.421 116.765C116.592 116.72 115.726 116.668 114.821 116.609C114.473 116.586 114.119 116.563 113.76 116.538C113.131 116.495 112.485 116.449 111.821 116.4V121.6ZM135.824 122H142.824V106.2C143.331 106.147 143.997 106.067 144.824 105.96C145.677 105.853 146.611 105.8 147.624 105.8H149.024C149.424 105.8 149.757 105.933 150.024 106.2C150.291 106.467 150.424 106.8 150.424 107.2V122H157.424V106.4C157.424 104.587 156.877 103.133 155.784 102.04C154.691 100.947 153.237 100.4 151.424 100.4H149.624C148.47 100.4 147.203 100.494 145.824 100.681C144.877 100.81 143.877 100.983 142.824 101.2V94H135.824V122ZM177.619 116.822C178.567 116.757 179.567 116.683 180.619 116.6V121.6C175.473 122.133 170.806 122.4 166.619 122.4C164.806 122.4 163.353 121.853 162.259 120.76C161.166 119.667 160.619 118.213 160.619 116.4V106.8C160.619 104.8 161.179 103.24 162.299 102.12C163.446 100.973 165.019 100.4 167.019 100.4H175.019C177.019 100.4 178.579 100.973 179.699 102.12C180.846 103.24 181.419 104.8 181.419 106.8V114.2H167.619V115.8C167.619 116.2 167.753 116.533 168.019 116.8C168.286 117.067 168.619 117.2 169.019 117.2C171.114 117.2 173.981 117.074 177.619 116.822ZM196.835 121.454C197.779 121.08 198.702 120.595 199.604 120L200.004 122H206.204V94H199.204V100.8H191.004C189.004 100.8 187.43 101.373 186.284 102.52C185.164 103.64 184.604 105.2 184.604 107.2V116.4C184.604 118.213 185.15 119.667 186.244 120.76C187.337 121.853 188.79 122.4 190.604 122.4H192.404C193.31 122.4 194.417 122.213 195.724 121.84C196.097 121.728 196.468 121.599 196.835 121.454ZM101.608 99.2H108.608V93.6H101.608V99.2ZM167.619 109.2V107C167.619 106.688 167.665 106.421 167.757 106.2C167.978 105.667 168.465 105.4 169.219 105.4H172.819C173.574 105.4 174.061 105.667 174.282 106.2C174.374 106.421 174.419 106.688 174.419 107V109.2H167.619ZM196.204 113.435V109.2H194.604V113.598C195.085 113.586 195.617 113.534 196.204 113.435ZM193.204 106.2C192.137 106.2 191.604 106.733 191.604 107.8V115.2C191.604 115.6 191.737 115.933 192.004 116.2C192.27 116.467 192.604 116.6 193.004 116.6H194.404C195.817 116.6 197.417 116.333 199.204 115.8V106.2H193.204Z' fill='#3BE6BD'/>
</svg>
";

// --------------------
// STATUS READING SVG
// --------------------
/*
$statReading = 
"<svg width='{$statusSize}' height='{$statusSize}' viewBox='0 0 244 218' fill='none' xmlns='http://www.w3.org/2000/svg'>
<rect x='12' width='219' height='218' rx='18' fill='#FFEECC'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M212.917 8H30.0826C24.5344 8 20.0367 12.4772 20.0367 18V109V200C20.0367 205.523 24.5344 210 30.0826 210H212.917C218.466 210 222.963 205.523 222.963 200V18C222.963 12.4772 218.466 8 212.917 8ZM30.0826 0C20.0958 0 12 8.05888 12 18V200C12 209.941 20.0958 218 30.0826 218H212.917C222.904 218 231 209.941 231 200V18C231 8.05888 222.904 0 212.917 0H30.0826Z' fill='#FFBB33'/>
<path d='M42.1172 70H58.9172C61.7172 70 63.7438 70.64 64.9972 71.92C66.2772 73.1733 66.9172 75.2 66.9172 78V81.6C66.9172 83.8133 66.5438 85.5333 65.7972 86.76C65.0772 87.9867 63.9172 88.8 62.3172 89.2L67.3172 98H59.5172L54.9172 89.6H49.3172V98H42.1172V70ZM59.7172 78C59.7172 76.4 58.9172 75.6 57.3172 75.6H49.3172V84H57.3172C58.9172 84 59.7172 83.2 59.7172 81.6V78ZM78.7062 81.4C77.6396 81.4 77.1062 81.9333 77.1062 83V85.2H83.9062V83C83.9062 81.9333 83.3729 81.4 82.3062 81.4H78.7062ZM90.1062 97.6C84.9596 98.1333 80.2929 98.4 76.1062 98.4C74.2929 98.4 72.8396 97.8533 71.7462 96.76C70.6529 95.6667 70.1062 94.2133 70.1062 92.4V82.8C70.1062 80.8 70.6662 79.24 71.7862 78.12C72.9329 76.9733 74.5062 76.4 76.5062 76.4H84.5062C86.5062 76.4 88.0662 76.9733 89.1862 78.12C90.3329 79.24 90.9062 80.8 90.9062 82.8V90.2H77.1062V91.8C77.1062 92.2 77.2396 92.5333 77.5062 92.8C77.7729 93.0667 78.1062 93.2 78.5062 93.2C81.1462 93.2 85.0129 93 90.1062 92.6V97.6ZM102.891 92.8C104.304 92.8 105.904 92.5333 107.691 92V89.6H101.891C101.491 89.6 101.157 89.7333 100.891 90C100.624 90.2667 100.491 90.6 100.491 91V91.4C100.491 91.8 100.624 92.1333 100.891 92.4C101.157 92.6667 101.491 92.8 101.891 92.8H102.891ZM95.4906 77.2C100.371 76.6667 104.771 76.4 108.691 76.4C110.504 76.4 111.957 76.9467 113.051 78.04C114.144 79.1333 114.691 80.5867 114.691 82.4V98H108.491L108.091 96C106.837 96.8267 105.544 97.44 104.211 97.84C102.904 98.2133 101.797 98.4 100.891 98.4H99.4906C97.6773 98.4 96.2239 97.8533 95.1306 96.76C94.0373 95.6667 93.4906 94.2133 93.4906 92.4V90.6C93.4906 88.7867 94.0373 87.3333 95.1306 86.24C96.2239 85.1467 97.6773 84.6 99.4906 84.6H107.691V83C107.691 82.6 107.557 82.2667 107.291 82C107.024 81.7333 106.691 81.6 106.291 81.6C104.557 81.6 102.637 81.68 100.531 81.84C98.4506 82 96.7706 82.12 95.4906 82.2V77.2ZM133.28 98L132.88 96C131.626 96.8267 130.333 97.44 129 97.84C127.693 98.2133 126.586 98.4 125.68 98.4H123.88C122.066 98.4 120.613 97.8533 119.52 96.76C118.426 95.6667 117.88 94.2133 117.88 92.4V83.2C117.88 81.2 118.44 79.64 119.56 78.52C120.706 77.3733 122.28 76.8 124.28 76.8H132.48V70H139.48V98H133.28ZM127.68 92.6C129.093 92.6 130.693 92.3333 132.48 91.8V82.2H126.48C125.413 82.2 124.88 82.7333 124.88 83.8V91.2C124.88 91.6 125.013 91.9333 125.28 92.2C125.546 92.4667 125.88 92.6 126.28 92.6H127.68ZM152.275 77.6V98H145.275V83H142.275V77.6H152.275ZM145.275 69.6H152.275V75.2H145.275V69.6ZM168.087 82.2C166.674 82.2 165.074 82.4667 163.287 83V98H156.287V76.8H162.487L162.887 78.8C164.141 77.9733 165.421 77.3733 166.727 77C168.061 76.6 169.181 76.4 170.087 76.4H171.887C173.701 76.4 175.154 76.9467 176.247 78.04C177.341 79.1333 177.887 80.5867 177.887 82.4V98H170.887V83.6C170.887 83.2 170.754 82.8667 170.487 82.6C170.221 82.3333 169.887 82.2 169.487 82.2H168.087ZM195.283 96.4C192.696 96.9333 190.429 97.2 188.483 97.2H187.083C185.269 97.2 183.816 96.6533 182.723 95.56C181.629 94.4667 181.083 93.0133 181.083 91.2V83.2C181.083 81.2 181.643 79.64 182.763 78.52C183.909 77.3733 185.483 76.8 187.483 76.8H202.283V99.2C202.283 101.013 201.736 102.467 200.643 103.56C199.549 104.653 198.096 105.2 196.283 105.2C192.096 105.2 187.429 104.933 182.283 104.4V99.2C187.376 99.6 191.243 99.8 193.883 99.8C194.283 99.8 194.616 99.6667 194.883 99.4C195.149 99.1333 195.283 98.8 195.283 98.4V96.4ZM190.483 91.8C192.163 91.8 193.763 91.6667 195.283 91.4V82.2H189.683C188.616 82.2 188.083 82.7333 188.083 83.8V90.4C188.083 90.8 188.216 91.1333 188.483 91.4C188.749 91.6667 189.083 91.8 189.483 91.8H190.483ZM84.8039 140H92.0039V146H84.8039V140ZM118.398 140H125.598V146H118.398V140ZM151.991 140H159.191V146H151.991V140Z' fill='#99701F'>
</svg>";
*/
$statReading = 
"<svg width='{$statusSize}' height='{$statusSize}' viewBox='0 0 244 218' fill='none' xmlns='http://www.w3.org/2000/svg'>
<rect x='12' width='219' height='218' rx='18' fill='#FFEECC'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M212.917 8H30.0826C24.5344 8 20.0367 12.4772 20.0367 18V109V200C20.0367 205.523 24.5344 210 30.0826 210H212.917C218.466 210 222.963 205.523 222.963 200V18C222.963 12.4772 218.466 8 212.917 8ZM30.0826 0C20.0958 0 12 8.05888 12 18V200C12 209.941 20.0958 218 30.0826 218H212.917C222.904 218 231 209.941 231 200V18C231 8.05888 222.904 0 212.917 0H30.0826Z' fill='#FFBB33'/>
<path d='M42.1172 94H58.9172C61.7172 94 63.7438 94.64 64.9972 95.92C66.2772 97.1733 66.9172 99.2 66.9172 102V105.6C66.9172 107.813 66.5438 109.533 65.7972 110.76C65.0772 111.987 63.9172 112.8 62.3172 113.2L67.3172 122H59.5172L54.9172 113.6H49.3172V122H42.1172V94ZM59.7172 102C59.7172 100.4 58.9172 99.6 57.3172 99.6H49.3172V108H57.3172C58.9172 108 59.7172 107.2 59.7172 105.6V102ZM78.7062 105.4C77.6396 105.4 77.1062 105.933 77.1062 107V109.2H83.9062V107C83.9062 105.933 83.3729 105.4 82.3062 105.4H78.7062ZM90.1062 121.6C84.9596 122.133 80.2929 122.4 76.1062 122.4C74.2929 122.4 72.8396 121.853 71.7462 120.76C70.6529 119.667 70.1062 118.213 70.1062 116.4V106.8C70.1062 104.8 70.6662 103.24 71.7862 102.12C72.9329 100.973 74.5062 100.4 76.5062 100.4H84.5062C86.5062 100.4 88.0662 100.973 89.1862 102.12C90.3329 103.24 90.9062 104.8 90.9062 106.8V114.2H77.1062V115.8C77.1062 116.2 77.2396 116.533 77.5062 116.8C77.7729 117.067 78.1062 117.2 78.5062 117.2C81.1462 117.2 85.0129 117 90.1062 116.6V121.6ZM102.891 116.8C104.304 116.8 105.904 116.533 107.691 116V113.6H101.891C101.491 113.6 101.157 113.733 100.891 114C100.624 114.267 100.491 114.6 100.491 115V115.4C100.491 115.8 100.624 116.133 100.891 116.4C101.157 116.667 101.491 116.8 101.891 116.8H102.891ZM95.4906 101.2C100.371 100.667 104.771 100.4 108.691 100.4C110.504 100.4 111.957 100.947 113.051 102.04C114.144 103.133 114.691 104.587 114.691 106.4V122H108.491L108.091 120C106.837 120.827 105.544 121.44 104.211 121.84C102.904 122.213 101.797 122.4 100.891 122.4H99.4906C97.6773 122.4 96.2239 121.853 95.1306 120.76C94.0373 119.667 93.4906 118.213 93.4906 116.4V114.6C93.4906 112.787 94.0373 111.333 95.1306 110.24C96.2239 109.147 97.6773 108.6 99.4906 108.6H107.691V107C107.691 106.6 107.557 106.267 107.291 106C107.024 105.733 106.691 105.6 106.291 105.6C104.557 105.6 102.637 105.68 100.531 105.84C98.4506 106 96.7706 106.12 95.4906 106.2V101.2ZM133.28 122L132.88 120C131.626 120.827 130.333 121.44 129 121.84C127.693 122.213 126.586 122.4 125.68 122.4H123.88C122.066 122.4 120.613 121.853 119.52 120.76C118.426 119.667 117.88 118.213 117.88 116.4V107.2C117.88 105.2 118.44 103.64 119.56 102.52C120.706 101.373 122.28 100.8 124.28 100.8H132.48V94H139.48V122H133.28ZM127.68 116.6C129.093 116.6 130.693 116.333 132.48 115.8V106.2H126.48C125.413 106.2 124.88 106.733 124.88 107.8V115.2C124.88 115.6 125.013 115.933 125.28 116.2C125.546 116.467 125.88 116.6 126.28 116.6H127.68ZM152.275 101.6V122H145.275V107H142.275V101.6H152.275ZM145.275 93.6H152.275V99.2H145.275V93.6ZM168.087 106.2C166.674 106.2 165.074 106.467 163.287 107V122H156.287V100.8H162.487L162.887 102.8C164.141 101.973 165.421 101.373 166.727 101C168.061 100.6 169.181 100.4 170.087 100.4H171.887C173.701 100.4 175.154 100.947 176.247 102.04C177.341 103.133 177.887 104.587 177.887 106.4V122H170.887V107.6C170.887 107.2 170.754 106.867 170.487 106.6C170.221 106.333 169.887 106.2 169.487 106.2H168.087ZM195.283 120.4C192.696 120.933 190.429 121.2 188.483 121.2H187.083C185.269 121.2 183.816 120.653 182.723 119.56C181.629 118.467 181.083 117.013 181.083 115.2V107.2C181.083 105.2 181.643 103.64 182.763 102.52C183.909 101.373 185.483 100.8 187.483 100.8H202.283V123.2C202.283 125.013 201.736 126.467 200.643 127.56C199.549 128.653 198.096 129.2 196.283 129.2C192.096 129.2 187.429 128.933 182.283 128.4V123.2C187.376 123.6 191.243 123.8 193.883 123.8C194.283 123.8 194.616 123.667 194.883 123.4C195.149 123.133 195.283 122.8 195.283 122.4V120.4ZM190.483 115.8C192.163 115.8 193.763 115.667 195.283 115.4V106.2H189.683C188.616 106.2 188.083 106.733 188.083 107.8V114.4C188.083 114.8 188.216 115.133 188.483 115.4C188.749 115.667 189.083 115.8 189.483 115.8H190.483Z' fill='#99701F'/>
</svg>";


// --------------------
// STATUS UNREAD SVG
// --------------------
$statUnRead = 
"<svg width='{$statusSize}' height='{$statusSize}' viewBox='0 0 244 219' fill='none' xmlns='http://www.w3.org/2000/svg'>
<rect x='12.5' y='0.5' width='218' height='218' rx='18' fill='#EAEAEA'/>
<path fill-rule='evenodd' clip-rule='evenodd' d='M212.5 8.5H30.5C24.9772 8.5 20.5 12.9772 20.5 18.5V109.5V200.5C20.5 206.023 24.9772 210.5 30.5 210.5H212.5C218.023 210.5 222.5 206.023 222.5 200.5V18.5C222.5 12.9772 218.023 8.5 212.5 8.5ZM30.5 0.5C20.5589 0.5 12.5 8.55888 12.5 18.5V200.5C12.5 210.441 20.5589 218.5 30.5 218.5H212.5C222.441 218.5 230.5 210.441 230.5 200.5V18.5C230.5 8.55888 222.441 0.5 212.5 0.5H30.5Z' fill='#C0C0C0'/>
<path d='M69.5094 94.5H76.7094V114.9C76.7094 117.7 76.0694 119.74 74.7894 121.02C73.536 122.273 71.5094 122.9 68.7094 122.9H59.5094C56.7094 122.9 54.6694 122.273 53.3894 121.02C52.136 119.74 51.5094 117.7 51.5094 114.9V94.5H58.7094V114.9C58.7094 116.5 59.5094 117.3 61.1094 117.3H67.1094C68.7094 117.3 69.5094 116.5 69.5094 114.9V94.5ZM92.9094 106.7C91.496 106.7 89.896 106.967 88.1094 107.5V122.5H81.1094V101.3H87.3094L87.7094 103.3C88.9627 102.473 90.2427 101.873 91.5494 101.5C92.8827 101.1 94.0027 100.9 94.9094 100.9H96.7094C98.5227 100.9 99.976 101.447 101.069 102.54C102.163 103.633 102.709 105.087 102.709 106.9V122.5H95.7094V108.1C95.7094 107.7 95.576 107.367 95.3094 107.1C95.0427 106.833 94.7094 106.7 94.3094 106.7H92.9094ZM118.505 107.1C116.825 107.1 115.091 107.5 113.305 108.3V122.5H106.305V101.3H112.505L112.905 103.9C115.198 101.9 117.598 100.9 120.105 100.9H121.905V107.1H118.505ZM132.122 105.9C131.055 105.9 130.522 106.433 130.522 107.5V109.7H137.322V107.5C137.322 106.433 136.789 105.9 135.722 105.9H132.122ZM143.522 122.1C138.375 122.633 133.709 122.9 129.522 122.9C127.709 122.9 126.255 122.353 125.162 121.26C124.069 120.167 123.522 118.713 123.522 116.9V107.3C123.522 105.3 124.082 103.74 125.202 102.62C126.349 101.473 127.922 100.9 129.922 100.9H137.922C139.922 100.9 141.482 101.473 142.602 102.62C143.749 103.74 144.322 105.3 144.322 107.3V114.7H130.522V116.3C130.522 116.7 130.655 117.033 130.922 117.3C131.189 117.567 131.522 117.7 131.922 117.7C134.562 117.7 138.429 117.5 143.522 117.1V122.1ZM156.306 117.3C157.72 117.3 159.32 117.033 161.106 116.5V114.1H155.306C154.906 114.1 154.573 114.233 154.306 114.5C154.04 114.767 153.906 115.1 153.906 115.5V115.9C153.906 116.3 154.04 116.633 154.306 116.9C154.573 117.167 154.906 117.3 155.306 117.3H156.306ZM148.906 101.7C153.786 101.167 158.186 100.9 162.106 100.9C163.92 100.9 165.373 101.447 166.466 102.54C167.56 103.633 168.106 105.087 168.106 106.9V122.5H161.906L161.506 120.5C160.253 121.327 158.96 121.94 157.626 122.34C156.32 122.713 155.213 122.9 154.306 122.9H152.906C151.093 122.9 149.64 122.353 148.546 121.26C147.453 120.167 146.906 118.713 146.906 116.9V115.1C146.906 113.287 147.453 111.833 148.546 110.74C149.64 109.647 151.093 109.1 152.906 109.1H161.106V107.5C161.106 107.1 160.973 106.767 160.706 106.5C160.44 106.233 160.106 106.1 159.706 106.1C157.973 106.1 156.053 106.18 153.946 106.34C151.866 106.5 150.186 106.62 148.906 106.7V101.7ZM186.695 122.5L186.295 120.5C185.042 121.327 183.749 121.94 182.415 122.34C181.109 122.713 180.002 122.9 179.095 122.9H177.295C175.482 122.9 174.029 122.353 172.935 121.26C171.842 120.167 171.295 118.713 171.295 116.9V107.7C171.295 105.7 171.855 104.14 172.975 103.02C174.122 101.873 175.695 101.3 177.695 101.3H185.895V94.5H192.895V122.5H186.695ZM181.095 117.1C182.509 117.1 184.109 116.833 185.895 116.3V106.7H179.895C178.829 106.7 178.295 107.233 178.295 108.3V115.7C178.295 116.1 178.429 116.433 178.695 116.7C178.962 116.967 179.295 117.1 179.695 117.1H181.095Z' fill='#959595'/>
</svg>
";

//Display Library Contents if they exist
if($totalRows > 0){
    //swapStatusState($statAssigned, $statFinColorsHover);

    while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
        extract($row);

        echo "<div class='bookContainer'>";
        // ------------------------------------------------------------------------------
        // START selectBoxAndAllOthers - contains Select Box, Title, author, rating
        // ------------------------------------------------------------------------------
        echo "<div class='selectBoxAndAllOthers'>";

        //-----------------------------
        // SELECT BOX
        //-----------------------------
        echo "<div class='selectBox'>";
            echo "<input class='bookCheckBox' book-id=".$ID." type='checkbox'></input>";
        echo "</div>";

        echo "<div class='titleAndStatusContainer'>";
            echo "<div class='titleStarsAuthSubs'>"; 
                //-----------------------------
                // TITLE
                //-----------------------------
                echo "<div class='titleContainer'>";
                    echo "<h2>{$Title}</h2>";
                echo "</div>";  // END titleContainer div   
                echo "<div class='starsAuthorsSubs'>";
                    //-----------------------------
                    // STARS
                    //-----------------------------
                    echo "<div class='starsAuthors'>";
                        echo "<div class='stars'>";
                        
                        // RATING
                        // Just display stars for the rating given for the book
                        if($Rating){
                            echo "<h4><span>";
                            $starCount = 0;
                            for ($i = 0; $i < 5; $i++){
                                // place half star - only if Rating == 0.5
                                if ($Rating < 1 && $starCount < 1){
                                    echo "{$hStar}";
                                    $starCount++;
                                }
                                // place whole star
                                else if($starCount < floor($Rating)){
                                    echo "{$star}";
                                    $starCount++;
                                }
                                else if (($Rating - $starCount) > 0){
                                    echo "{$hStar}";
                                }
                                // place empty star
                                else{
                                    echo "{$eStar}";
                                }

                                /*
                                // place full star
                                if (ceil($Rating) - $i > 1.0){
                                    echo "{$star}";
                                }
                                // place half star
                                else{
                                    debug_to_console('ceil($Rating) - $Rating: '. (ceil($Rating) - $Rating));
                                    if (ceil($Rating) - $Rating > 0){
                                        echo "{$hStar}";
                                    }else{
                                        echo "{$star}";
                                    }
                                }
                                */
                            }
                            // include the rating numeric value as well
                            //echo "{$Rating}</h4></span></div>";
                            echo "</h4></span>";
                        }
                        else{
                            echo "<div><p><i>Not Yet Rated</i></p></div>";
                        }
                        echo "</div>"; // END stars
                        //-----------------------------
                        // AUTHORS
                        //-----------------------------
                        echo "<div class='authors'>";
                            // AUTHOR(s)
                            echo "<div><p><i>Authors go here</i></p></div>";
                        echo "</div>"; // END authors
                    echo "</div>"; // END starsAuthors
                    //-----------------------------
                    // SUBJECT CONTAINER
                    // ----------------------------
                    echo "<div class='subjects'>{$SubjectName}";
                    echo "</div>"; // END subjects
                echo "</div>"; // END starsAuthorsSubs
            echo "</div>";  // END titleStarsAuthSubs
            
            // ------------------------------------------------------------------------------
            // START STATUS CONTAINER - contains "Finished" / "Not Read" / "Reading" Graphics
            // ------------------------------------------------------------------------------
            echo "<div class='statContainer'>";
                // ---------------------------
                // UI LINK to UPDATE PAGE
                // ---------------------------
                echo "<div class='navToUpdatePageContainer'>";
                echo "<button class='navToUpdatePage' book-id=".$ID." onclick='navToUpdate(this);'>Edit this Book";
                echo "</button></div>";
                // // ---------------------------
                // // READING LIST TOGGLE SWITCH
                // // ---------------------------
                // echo "<div class='toggleContainer'>"; 
                // //echo "<div class='toggleStateImage'";
                // if ($Reading){
                //     //echo "state='on'></div>";
                //     echo "<label class='readingListSwitch'><input type='checkbox' checked='true' onclick='readingListSwitchAction(this)'><span class='slider round'></span></label>";
                // }
                // else{
                //     //echo "state='off'></div>";
                //     echo "<label class='readingListSwitch'><input type='checkbox' onclick='readingListSwitchAction(this)'><span class='slider round'></span></label>";
                // }
                // echo"</div>";
                
                // echo "<div id='readingListSwitchSpacer'></div>";
                // ---------------------------
                // FINISHED BUTTON
                // ---------------------------
                if($DateFinished){
                    echo "<button class='statusFin' statusValue='finished' onclick='statusContainerAction(this)'>";
                }else if ($Reading){
                    echo "<button class='statusReading' statusValue='reading' onclick='statusContainerAction(this)'>";
                }else{
                    echo "<button class='statusUnread' statusValue='unread' onclick='statusContainerAction(this)'>";
                }
                
            echo "</button></div>";  // END statusContainer div
        
        echo "</div>";  // END titleAndStatusContainer div
        echo "</div>";  // END selectBoxAndAllOthers
        // ------------------------------------------------------------------------------
        // START ADVANCED CONTAINER - contains All other data for book
        // ------------------------------------------------------------------------------
        echo "<div class='advContainer advanced-toggle' onclick='slideToggle(this, 200)'><b>Book Details  <span id='details-icon' class='glyphicon glyphicon-chevron-down'></span></b>";
                echo "<div class='advanced' style='display:none'>Details:";
                    echo "<div>Date Started: {$DateStarted}</div>";
                    echo "<div>Date Acquired: {$DateAcquired}</div>";
                    echo "<div>Date Finished: {$DateFinished}</div>";
                    echo "<div>Progress: {$Progress}</div>";
                    echo "<div>PageCount: {$PageCount}</div>";
                    echo "<div>ListPrice: {$ListPrice}</div>";
                    echo "<div>ISBN: {$ISBN}</div>";
                    echo "<div>Comments: {$Comments}</div>";
                echo "</div>";
            echo "<div class='endOfBookSpan'></div>";
        echo "</div>";  // END advContainer div
        
        echo "</div>";  // END bookContainer div
        

        //echo "<div class='starSlider'></div";
        //echo "<div class='slidecontainer'>";
        //    echo "<input type='range' min='0' max='5' value='0' class='slider' id='myRange'>";
        //    echo "<p>Value: <span id='demo'></span></p>";
        //echo "</div>";    
        
            
        //echo "<div class='ratingSlider'>";
        //    echo "<input type='range min=0 max=5 value=0 class='slider' step='0.5'/>";
        //echo "</div>";
        
        
        /*
            echo "<td>STAND IN FOR AUTHOR</td>";        // IN NEW TEMPLATE
            echo "<td>{$SubjectName}</td>";             // IN NEW TEMPLATE
            echo "<td>{$Rating}</td>";                  // IN NEW TEMPLATE
            echo "<td>{$PageCount}</td>";
            echo "<td>{$DateAcquired}</td>";
            echo "<td>{$DateStarted}</td>";
            echo "<td>{$DateFinished}</td>";
            echo "<td>{$Progress}</td>";
            echo "<td>{$ListPrice}</td>";
            echo "<td>{$ISBN}</td>";
            echo "<td>{$Comments}</td>";
        
            echo "<td>";
                // read one, edit and delete button will be here
                //CHANGE NAME read_one.php to bookDetail.php
        
                echo "<a href='readOne.php?id={$ID}' class='btn btn-primary left-margin'>
                    <span class='glyphicon glyphicon-list'></span> Read
                    </a>
                    
                    <a href='updateBook.php?id={$ID}' class='btn btn-info left-margin'>
                    <span class='glyphicon glyphicon-edit'></span> Edit
                    </a>
                    <a delete-id='{$ID}' class='btn btn-danger delete-object'>
                    <span class='glypicon glyphicon-remove'></span> Delete
                    </a>
                ";
            echo "</td>";
        echo "</tr>";
        */
    } // END WHILE
    
    //echo '</table>';
    
    //paging buttons
    include_once 'paging.php';
    
} // END IF($totalRows > 0)
//There are no books in Biblian Yet
else{
    echo '<div class="alert alert-info">Your Biblian is Empty.</div>';
}
?>

<script src="//code.jquery.com/jquery-1.11.0.min.js"></script> 
<script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
<script>
    // ------------------------------------------------------------------------
    // STATUS CONTAINER FUNCTIONALITY
    // ------------------------------------------------------------------------
    /*
    // basic formula for creating a JS button:
    // 1) get a handle for the button through querySelector and assigning ther DOM element to a JS alias (a const)
    const statContainer = document.getElementsByClassName('.statusContainer');
    // 2) attach an event listener to the DOM element.  In this case its mouseup.  
    statContainer.addEventListener('mouseup', function(e){
        statusValue = statContainer.getAttribute('status-value');
        alert(statusValue);
        // 3) tell it what to do
        
    */
    // If I want each button in the HTML page to have ownership of the function calling it, then the function needs
    // to be called from the HTML.  In other words, onclick='statusContainerAction(this)'.  This calls the
    // statusContainterAction specifically for each instance of the button and only for that instance.
    
// 'obj' is usually the button itself, passed into the function to make it easier to manipulate elements
// of the button.
function statusContainerAction(obj){
    const status = obj.getAttribute('statusValue');
    console.log('obj.statusValue B4: ', status);
    if (status === 'finished'){
        //obj.innerHTML = imgUnread;
        obj.setAttribute('statusValue', 'unread');
        obj.setAttribute('class', 'statusUnread');
    }else if(status === 'reading'){
        //obj.innerHTML = imgFinished;
        //obj.value = 'finished';
        obj.setAttribute('statusValue', 'finished');
        obj.setAttribute('class', 'statusFin');
    }else{
        //obj.innerHTML = imgReading;
        //obj.value = 'reading';
        obj.setAttribute('statusValue', 'reading');
        obj.setAttribute('class', 'statusReading');
    }
    console.log('obj.statusValue: AFTR', status);
}

// MOVE LATER
function navToUpdate(btnEvent){
    bookId = btnEvent.getAttribute('book-id');
    window.location.replace(`./updateBook.php?id=${bookId}`);
}
// ------------------------------------------------------------------------
// READING LIST SWITCH FUNCTIONALITY
// --Toggles whether a book is on the reading list or not
// --handles UI changes 
// --at least starts the process of an async DB operation to update the DB
// immmediately with the change.
// --perhaps have the status image only change when a successful read of the 
// DB confirms that the 'reading' value is changed.
// ------------------------------------------------------------------------
function readingListSwitchAction(obj){
    //deal with toggling the Currently Reading section
    
    //---------------------------------------
    // deal with stateImage later
    //const toggleStateImage = obj.parentNode.parentNode.childNodes[0];
    //let state = toggleStateImage.getAttribute('state');
    //console.log(state);
    //---------------------------------------
    if (obj.checked === true){
        //toggleStateImage.setAttribute('state', 'on');
        console.log('checked');
    }
    else{
        console.log('off');
    }
}

//----------------------------------------------------
// Collapsible Details Section
// ---------------------------------------------------

let slideUp = (target, duration=500) => {
    target.style.transitionProperty = 'height margin padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.boxSizing = 'border-box';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;

    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.style.overflow = 'hidden';

    window.setTimeout(() => {
        target.style.display = 'none';
        target.style.removeProperty('height');
        target.style.removeProperty('padding-top');
        target.style.removeProperty('padding-bottom');
        target.style.removeProperty('margin-top');
        target.style.removeProperty('margin-bottom');
        target.style.removeProperty('overflow');
        target.style.removeProperty('transition-duration');
        target.style.removeProperty('transition-property');
    }, duration);
}
let slideDown = (target, duration=500) => {
    target.style.removeProperty('display');
    let display = window.getComputedStyle(target).display;

    if (display === 'none')
      display = 'block';

    target.style.display = display;
    let height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.boxSizing = 'border-box';
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    window.setTimeout( () => {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
    }, duration);
  }

  var slideToggle = (target, duration = 500) => {
    let adv = target.children[1];

    if (window.getComputedStyle(adv).display === 'none') {
      return slideDown(adv, duration);
    } else {
      return slideUp(adv, duration);
    }
  }


function toggleDetails(e){
    var adv = e.children[1];
    
    if(window.getComputedStyle(adv).display === 'block'){
        hide(adv);      // simple implementation
    }else{
        show(adv);      // simple implementation
    }
}


// // WORK IN PROGRESS TO GET THE DELETE BUTTON TO APPEAR WHEN A CHECKBOX IS CHECKED
// var deleteBtn = document.getElementById('deleteSelectedBtn');
// var x = document.getElementsByClassName('bookCheckBox');
// for (i = 0; i < x.length; i++){
//     //x[i].addEventListener('click', function(e){
//         if(x[i].checked){
//             //console.log('false');
//         }
//         else{
//             //console.log('true');
//         }
//         deleteBtn.style.display = 'inline-block';
//     //});    
// };

/*-----------------------------------------------------------------------------
// Function:    deleteSelected()        
//
// Desc:        Javascript. Get the IDs of selected Books & pass them to $_POST  
// Invocations: readtemplate.php:
//                echo "<a id='deleteSelectedBtn' onclick='deleteSelected()'>";
//---------------------------------------------------------------------------*/

function deleteSelected(){
    // GET THE ID OF THE BOOK(s) SELECTED BY CHECKBOXEN - bookCheckBox.book-id
    var checkboxen = document.getElementsByClassName('bookCheckBox');
    var bookIds = [];
    for (i = 0; i < checkboxen.length; i++){
        if(checkboxen[i].checked){
            bookIds.push(checkboxen[i].getAttribute('book-id'));
        }
    }
    // Proceed with DELETE
    // only _POST data IF there are selected checkboxen
    if(bookIds.length > 0){
        // double check that User wants to delete book from the DB
        if (confirm('Are you ABSOLUTELY sure you want to permanently delete from your Library?')){
            const btnSubmission = document.querySelector('#deleteForm');
            const idsToDelete = document.createElement('input');
            idsToDelete.setAttribute('name', 'bookIds');
            idsToDelete.setAttribute('type', 'hidden');
            idsToDelete.setAttribute('value', bookIds);
            btnSubmission.appendChild(idsToDelete);
            document.getElementById('deleteForm').submit();
            return(true);
        }
    }
    else{
        alert('Select a book to delete first');
        return(false);
    } 
}

/*
var slider = document.getElementById('myRange');
var output = document.getElementById('demo');
output.innerHTML = slider.value; // Display the default slider value

// Update the current slider value (each time you drag the slider handle)
slider.oninput = function() {
  output.innerHTML = this.value;
}
*/
</script>